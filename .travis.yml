notifications:
  email: false
git:
  quiet: true
  depth: false
jdk: openjdk8
node_js: lts/*
python: 3.7
services: docker
os: linux
addons:
  apt:
    update: true
    packages:
      - python3-pip
      - sudo
      - lsof
      - curl
      - jq
install: true
before_install:
  - |
    if [ ! -f ${HOME}/.local/daggerok/bash-functions/master/main.bash ] ; then
      mkdir -p ${HOME}/.local/daggerok/bash-functions/master ;
      curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash > ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
    fi
    source ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
  - stop_any 80 5432 8080
  - export PATH=$HOME/.local/bin:$PATH
  - pip3 install --user --upgrade pip setuptools
  - pip install --user --upgrade docker-compose httpie
  - docker-compose version
  - stop_any 80 8001 8002 8080 5432
before_script:
- export base=$(pwd)
jobs:
  include:
  - stage: test
    name: struts2dolist test
    script:
    - cd ${base}/struts2dolist/
    - ./mvnw >/dev/null
    - for i in $(docker ps -aq) ; do docker rm -f -v $i ; done
    - ./mvnw -pl :docker docker-compose:up
    - docker logs -f -t docker_site_1 &
    - wait_healthy_docker_containers 1
    - http :8080/site/
    - http :8080/site/
    - http :8080/site/
    - ./mvnw -pl :docker docker-compose:down >/dev/null
  - stage: test
    name: struts-2.5.20-jboss-eap-7.2.0-jdk-8-example maven docker-compose test
    script:
    - cd ${base}/struts-2.5.20-jboss-eap-7.2.0-jdk-8-example/
    - ./mvnw >/dev/null
    - docker-compose -f .mvn/docker-compose.yaml up --build --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - http :8080/webapp/customers/list
    - for i in $(docker ps -qa); do docker rm -f -v $i ; done
    - docker-compose -f .mvn/docker-compose.yaml down -v --rmi local
    - stop_any 80 8080
  - stage: test
    name: struts-2.5.20-jboss-eap-7.2.0-jdk-8-examplemaven versions display
    script:
    - cd ${base}/struts-2.5.20-jboss-eap-7.2.0-jdk-8-example/
    - ./mvnw versions:display-parent-updates versions:display-dependency-updates versions:display-plugin-updates -U
  - stage: test
    name: struts-2.5.20-jboss-eap-7.2.0-jdk-8-example gradle docker-compose test
    script:
    - cd ${base}/struts-2.5.20-jboss-eap-7.2.0-jdk-8-example/
    - ./gradlew >/dev/null
    - ./gradlew --stop >/dev/null
    - docker-compose -f gradle/docker-compose.yaml up --build --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - http :8080/webapp/customers/list
    - for i in $(docker ps -qa); do docker rm -f -v $i ; done
    - docker-compose -f gradle/docker-compose.yaml down -v --rmi local
    - stop_any 80 8080
  - stage: test
    name: struts-2.5.20-jboss-eap-7.2.0-jdk-8-example gradle dependency updates
    script:
    - cd ${base}/struts-2.5.20-jboss-eap-7.2.0-jdk-8-example/
    - ./gradlew dependencyUpdates -Drevision=release
    - ./gradlew --stop >/dev/null
  - stage: test
    name: my-chat docker-compose
    script:
    - cd ${base}/my-chat
    - bash mvnw >/dev/null
    - bash gradlew >/dev/null
    - docker-compose up --build --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/my-chat/
    - for i in $(docker ps -qa); do docker rm -f -v $i ; done
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: struts-rest-plugin maven jetty run
    script:
    - cd ${base}/struts-rest-plugin
    - ./mvnw >/dev/null
    - ./mvnw -pl webapp jetty:run &
    - wait_for 8080
    - http :8080/user.json
    - http :8080/user.xml
    - stop_any 8080 80
    - ./gradlew >/dev/null
    #- (./gradlew jettyRun) &
    #- sleep 35
    #- http :8080/user.xml
    #- http :8080/user.json
    #- stop_any 8080 80
  - stage: test
    name: ognl-cdi-tracking-data docker-compose
    script:
    - cd ${base}/ognl-cdi-tracking-data
    - bash mvnw >/dev/null
    - bash gradlew >/dev/null
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: ognl-call-method maven
    script:
    - cd ${base}/ognl-call-method
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
  - stage: test
    name: ognl-call-method docker-compose
    script:
    - cd ${base}/ognl-call-method
    - bash mvnw -pl webapp clean package
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: array-map-list-mapping maven
    script:
    - cd ${base}/array-map-list-mapping
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
  - stage: test
    name: array-map-list-mapping docker-compose
    script:
    - cd ${base}/array-map-list-mapping
    - bash mvnw -pl webapp clean package
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: session-aware maven
    script:
    - cd ${base}/session-aware
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
  - stage: test
    name: session-aware docker-compose
    script:
    - cd ${base}/session-aware
    - bash mvnw -pl webapp clean package
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: ognl-tracking-data maven
    script:
    - cd ${base}/ognl-tracking-data
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
  - stage: test
    name: ognl-tracking-data docker-compose
    script:
    - cd ${base}/ognl-tracking-data
    - bash mvnw -pl webapp clean package
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: struts2-freemarker-out-of-the-box maven
    script:
    - cd ${base}/struts2-freemarker-out-of-the-box
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
  - stage: test
    name: struts2-freemarker-out-of-the-box docker-compose
    script:
    - cd ${base}/struts2-freemarker-out-of-the-box
    - bash mvnw clean package
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: struts2-velocity maven
    script:
    - cd ${base}/struts2-velocity
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
  - stage: test
    name: struts2-velocity docker-compose
    script:
    - cd ${base}/struts2-velocity
    - bash mvnw clean package
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: result-conventions-and-fallback maven
    script:
    - cd ${base}/result-conventions-and-fallback
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - http :8080/webapp/second-index
    - http :8080/webapp/second-index/
    - http :8080/webapp/blah/blah-blah
    - stop_any 8080 80
  - stage: test
    name: result-conventions-and-fallback docker-compose
    script:
    - cd ${base}/result-conventions-and-fallback
    - bash mvnw clean package
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - http :8080/webapp/second-index
    - http :8080/webapp/second-index/
    - http :8080/webapp/blah/blah-blah
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: handle-user-date maven jetty
    script:
    - cd ${base}/handle-user-date
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/find-all
    - http :8080/webapp/submit-data.action\?newData=two
    - http :8080/webapp/find-all
    - stop_any 8080 80
  - stage: test
    name: handle-user-date docker-compose
    script:
    - cd ${base}/handle-user-date
    - bash mvnw clean package
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/find-all
    - http :8080/webapp/submit-data.action\?newData=three
    - http :8080/webapp/find-all
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: using-conventions-struts-2.3.35
    script:
    - cd ${base}/using-conventions-struts-2.3.35
    - bash gradlew clean build
    - bash mvnw clean package
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - http :8080/webapp/hello
    - http :8080/webapp/customers/list
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: using-conventions
    script:
    - cd ${base}/using-conventions
    - bash gradlew clean build
    - bash mvnw clean package
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - http :8080/webapp/hello
    - http :8080/webapp/customers/list
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: render-property-from-action maven jetty plugin
    script:
    - cd ${base}/render-property-from-action
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - http :8080/webapp/hello-action
    - stop_any 8080 80
  - stage: test
    name: render-property-from-action docker-compose
    script:
    - cd ${base}/render-property-from-action
    - bash gradlew >/dev/null
    - bash mvnw >/dev/null
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - http :8080/webapp/hello-action
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: message-source-files
    script:
    - cd ${base}/message-source-files
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - http :8080/webapp/hello
    - stop_any 8080
  - stage: test
    name: struts2-angularjs-starter
    script:
    - cd ${base}/struts2-angularjs-starter
    - bash mvnw -f webapp/pom.xml clean package jetty:run &
    - wait_for 8080
    - http :8080/
    - http :8080/home
    - http :8080/projects
    - stop_any 8080 80
  - stage: test
    name: starter gradle
    script:
    - cd ${base}/starter
    - bash gradlew clean build
  - stage: test
    name: starter maven jetty plugin
    script:
    - cd ${base}/starter
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - http :8080/webapp/customers/list
    - stop_any 8080 80
  - stage: test
    name: starter docker-compose
    script:
    - cd ${base}/starter
    - bash gradlew clean build >/dev/null
    - bash mvnw clean package >/dev/null
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - wait_healthy_docker_containers 1 # https://github.com/daggerok/bash-functions/blob/master/main.bash#L131
    - http :8080/webapp/
    - http :8080/webapp/customers/list
    - docker-compose down -v
    - stop_any 8080 80
before_cache:
- for item in $(find ~/.gradle -name "*.lock") ;
    do sudo rm -rfv $item ;
  done
cache:
  pip: true
  packages: true
  directories:
  - ~/.m2
  - ~/.docker
  - ~/.gradle
  - ~/.local/daggerok

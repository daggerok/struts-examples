git:
  quiet: true
  depth: false
env:
  global:
  - TERM=dumb
language: java
jdk: openjdk8
service:
- docker
addons:
  apt:
    update: true
    packages:
    - sudo
    - lsof
    - wget
    - bash
    - curl
    - jq
    - libxml2-utils
    - unzip
    - docker-ce
    - python3-dev
    - python3-pip
    - python3-six
    - python3-setuptools
    - libappindicator1
    - fonts-liberation
    - google-chrome-stable
install: true
before_install:
- docker-compose -v
- export PATH=$HOME/.local/bin:$PATH
- pip3 install --user $(whoami) --upgrade pip >/dev/null # pip3 -> pip
- pip install --user $(whoami) --upgrade docker-compose httpie >/dev/null 2>&1
- http --version --debug
- docker-compose -v
#
- source <(curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash)
- stop_any 80 8001 8002 8080 5432
before_script:
- export base=$(pwd)
jobs:
  include:
  - stage: test
    name: struts-2.5.20-jboss-eap-7.2.0-jdk-8-example
    jdk: openjdk8
    script:
    - cd ${base}/struts-2.5.20-jboss-eap-7.2.0-jdk-8-example/
    #
    - ./mvnw >/dev/null
    - docker-compose -f .mvn/docker-compose.yaml up --build --force-recreate --remove-orphans &
    - while [[ $(docker ps -lqf health=healthy | wc -l) -lt 1 ]] ; do echo -ne '.' ; sleep 1s ; done
    - http :8080/webapp/
    - http :8080/webapp/customers/list
    - for i in $(docker ps -qa); do docker rm -f -v $i ; done
    - docker-compose -f .mvn/docker-compose.yaml down -v --rmi local
    - stop_any 80 8080
    - ./mvnw versions:display-parent-updates versions:display-dependency-updates versions:display-plugin-updates -U
    #
    - ./gradlew >/dev/null
    - docker-compose -f gradle/docker-compose.yaml up --build --force-recreate --remove-orphans &
    - while [[ $(docker ps -lqf health=healthy | wc -l) -lt 1 ]] ; do echo -ne '.' ; sleep 1s ; done
    - http :8080/webapp/
    - http :8080/webapp/customers/list
    - for i in $(docker ps -qa); do docker rm -f -v $i ; done
    - docker-compose -f gradle/docker-compose.yaml down -v --rmi local
    - stop_any 80 8080
    - ./gradlew dependencyUpdates -Drevision=release
    - ./gradlew --stop >/dev/null
    #
  - stage: test
    name: my-chat
    jdk: openjdk8
    script:
    - cd ${base}/my-chat
    - bash mvnw >/dev/null
    - bash gradlew >/dev/null
    - docker-compose up --build --force-recreate --remove-orphans &
    - while [[ $(docker ps -lqf health=healthy | wc -l) -lt 1 ]] ; do echo -ne '.' ; sleep 1s ; done
    - http :8080/my-chat/
    - for i in $(docker ps -qa); do docker rm -f -v $i ; done
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: struts-rest-plugin
    jdk: openjdk8
    script:
    - cd ${base}/struts-rest-plugin
    - ./mvnw >/dev/null
    - ./mvnw -pl webapp jetty:run &
    - wait_for 8080
    - http :8080/user.json
    - http :8080/user.xml
    - stop_any 8080 80
    - ./gradlew >/dev/null
    #- (./gradlew jettyRun) &
    #- sleep 35
    #- http :8080/user.xml
    #- http :8080/user.json
    #- stop_any 8080 80
  - stage: test
    name: ognl-cdi-tracking-data
    jdk: openjdk8
    script:
    - cd ${base}/ognl-cdi-tracking-data
    - bash mvnw >/dev/null
    - bash gradlew >/dev/null
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: ognl-call-method
    jdk: openjdk8
    script:
    - cd ${base}/ognl-call-method
    # maven
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
    # gradle docker
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: array-map-list-mapping
    jdk: openjdk8
    script:
    - cd ${base}/array-map-list-mapping
    # maven
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
    # gradle docker
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: session-aware
    jdk: openjdk8
    script:
    - cd ${base}/session-aware
    # maven
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
    # gradle docker
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: ognl-tracking-data
    jdk: openjdk8
    script:
    - cd ${base}/ognl-tracking-data
    # maven
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
    # gradle docker
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: struts2-freemarker-out-of-the-box
    jdk: openjdk8
    script:
    - cd ${base}/struts2-freemarker-out-of-the-box
    # maven
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
    # gradle docker
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: struts2-velocity
    jdk: openjdk8
    script:
    - cd ${base}/struts2-velocity
    # maven
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - stop_any 8080
    # gradle docker
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: result-conventions-and-fallback
    jdk: openjdk8
    script:
    - cd ${base}/result-conventions-and-fallback
    # maven
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - http :8080/webapp/second-index
    - http :8080/webapp/second-index/
    - http :8080/webapp/blah/blah-blah
    - stop_any 8080 80
    # gradle docker
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - http :8080/webapp/second-index
    - http :8080/webapp/second-index/
    - http :8080/webapp/blah/blah-blah
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: handle-user-date
    jdk: openjdk8
    script:
    - cd ${base}/handle-user-date
    # maven
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/find-all
    - http :8080/webapp/submit-data.action\?newData=two
    - http :8080/webapp/find-all
    - stop_any 8080 80
    # gradle docker
    - bash gradlew clean build
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/find-all
    - http :8080/webapp/submit-data.action\?newData=three
    - http :8080/webapp/find-all
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: using-conventions-struts-2.3.35
    jdk: openjdk8
    script:
    - cd ${base}/using-conventions-struts-2.3.35
    - bash gradlew clean build
    - bash mvnw clean package
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - http :8080/webapp/hello
    - http :8080/webapp/customers/list
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: using-conventions
    jdk: openjdk8
    script:
    - cd ${base}/using-conventions
    - bash gradlew clean build
    - bash mvnw clean package
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - http :8080/webapp/hello
    - http :8080/webapp/customers/list
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: render-property-from-action
    jdk: openjdk8
    script:
    - cd ${base}/render-property-from-action
    # maven jetty plugin
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - http :8080/webapp/hello-action
    - stop_any 8080 80
    # docker
    - bash gradlew
    - bash mvnw
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - http :8080/webapp/hello-action
    - docker-compose down -v
    - stop_any 8080 80
  - stage: test
    name: message-source-files
    jdk: openjdk8
    script:
    - cd ${base}/message-source-files
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - http :8080/webapp/hello
    - stop_any 8080
  - stage: test
    name: struts2-angularjs-starter
    jdk: openjdk8
    script:
    - cd ${base}/struts2-angularjs-starter
    - bash mvnw -f webapp/pom.xml clean package jetty:run &
    - wait_for 8080
    - http :8080/
    - http :8080/home
    - http :8080/projects
    - stop_any 8080 80
  - stage: test
    name: starter
    jdk: openjdk8
    script:
    - cd ${base}/starter
    # gradle
    - bash gradlew clean build
    # maven
    - bash mvnw -pl webapp clean package jetty:run &
    - wait_for 8080
    - http :8080/webapp/
    - http :8080/webapp/customers/list
    - stop_any 8080 80
    # docker
    - docker-compose build --force-rm --no-cache --pull
    - docker-compose up --force-recreate --remove-orphans &
    - sleep 30
    - http :8080/webapp/
    - http :8080/webapp/customers/list
    - docker-compose down -v
    - stop_any 8080 80
cache:
  pip: true
  packages: true
  directories:
  - $HOME/.m2
  - $HOME/.docker
  - $HOME/.gradle
